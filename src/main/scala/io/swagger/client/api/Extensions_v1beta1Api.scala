/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.IoK8sApiExtensionsV1beta1DaemonSet
import io.swagger.client.model.IoK8sApiExtensionsV1beta1DaemonSetList
import io.swagger.client.model.IoK8sApiExtensionsV1beta1Deployment
import io.swagger.client.model.IoK8sApiExtensionsV1beta1DeploymentList
import io.swagger.client.model.IoK8sApiExtensionsV1beta1DeploymentRollback
import io.swagger.client.model.IoK8sApiExtensionsV1beta1Ingress
import io.swagger.client.model.IoK8sApiExtensionsV1beta1IngressList
import io.swagger.client.model.IoK8sApiExtensionsV1beta1NetworkPolicy
import io.swagger.client.model.IoK8sApiExtensionsV1beta1NetworkPolicyList
import io.swagger.client.model.IoK8sApiExtensionsV1beta1PodSecurityPolicy
import io.swagger.client.model.IoK8sApiExtensionsV1beta1PodSecurityPolicyList
import io.swagger.client.model.IoK8sApiExtensionsV1beta1ReplicaSet
import io.swagger.client.model.IoK8sApiExtensionsV1beta1ReplicaSetList
import io.swagger.client.model.IoK8sApiExtensionsV1beta1Scale
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1APIResourceList
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1DeleteOptions
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1Patch
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1Status
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1WatchEvent
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object Extensions_v1beta1Api {

  /**
   * create a DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1DaemonSet (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1DaemonSet (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1NamespacedDaemonSet(namespace: String, body: IoK8sApiExtensionsV1beta1DaemonSet, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1DaemonSet](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1DaemonSet](202)
      .withErrorResponse[Unit](401)
        /**
   * create a Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Deployment (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1Deployment (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1NamespacedDeployment(namespace: String, body: IoK8sApiExtensionsV1beta1Deployment, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Deployment](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Deployment](202)
      .withErrorResponse[Unit](401)
        /**
   * create rollback of a Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DeploymentRollback (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1DeploymentRollback (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1DeploymentRollback (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DeploymentRollback
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1NamespacedDeploymentRollback(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1DeploymentRollback, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DeploymentRollback] =
    ApiRequest[IoK8sApiExtensionsV1beta1DeploymentRollback](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DeploymentRollback](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1DeploymentRollback](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1DeploymentRollback](202)
      .withErrorResponse[Unit](401)
        /**
   * create an Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Ingress (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1Ingress (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1NamespacedIngress(namespace: String, body: IoK8sApiExtensionsV1beta1Ingress, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Ingress](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Ingress](202)
      .withErrorResponse[Unit](401)
        /**
   * create a NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1NetworkPolicy (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1NetworkPolicy (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1NetworkPolicy (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1NamespacedNetworkPolicy(namespace: String, body: IoK8sApiExtensionsV1beta1NetworkPolicy, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](202)
      .withErrorResponse[Unit](401)
        /**
   * create a ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1ReplicaSet (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1ReplicaSet (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1NamespacedReplicaSet(namespace: String, body: IoK8sApiExtensionsV1beta1ReplicaSet, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1ReplicaSet](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1ReplicaSet](202)
      .withErrorResponse[Unit](401)
        /**
   * create a PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (Created)
   *   code 202 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (Accepted)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def createExtensionsV1beta1PodSecurityPolicy(body: IoK8sApiExtensionsV1beta1PodSecurityPolicy, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy](ApiMethods.POST, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](201)
      .withErrorResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](202)
      .withErrorResponse[Unit](401)
        /**
   * delete collection of DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def deleteExtensionsV1beta1CollectionNamespacedDaemonSet(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete collection of Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def deleteExtensionsV1beta1CollectionNamespacedDeployment(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete collection of Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def deleteExtensionsV1beta1CollectionNamespacedIngress(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete collection of NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete collection of ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def deleteExtensionsV1beta1CollectionNamespacedReplicaSet(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete collection of PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def deleteExtensionsV1beta1CollectionPodSecurityPolicy(pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete a DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
   */
  def deleteExtensionsV1beta1NamespacedDaemonSet(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1DeleteOptions, pretty: Option[String] = None, gracePeriodSeconds: Option[Int] = None, orphanDependents: Option[Boolean] = None, propagationPolicy: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withQueryParam("gracePeriodSeconds", gracePeriodSeconds)
      .withQueryParam("orphanDependents", orphanDependents)
      .withQueryParam("propagationPolicy", propagationPolicy)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete a Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
   */
  def deleteExtensionsV1beta1NamespacedDeployment(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1DeleteOptions, pretty: Option[String] = None, gracePeriodSeconds: Option[Int] = None, orphanDependents: Option[Boolean] = None, propagationPolicy: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withQueryParam("gracePeriodSeconds", gracePeriodSeconds)
      .withQueryParam("orphanDependents", orphanDependents)
      .withQueryParam("propagationPolicy", propagationPolicy)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete an Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
   */
  def deleteExtensionsV1beta1NamespacedIngress(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1DeleteOptions, pretty: Option[String] = None, gracePeriodSeconds: Option[Int] = None, orphanDependents: Option[Boolean] = None, propagationPolicy: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withQueryParam("gracePeriodSeconds", gracePeriodSeconds)
      .withQueryParam("orphanDependents", orphanDependents)
      .withQueryParam("propagationPolicy", propagationPolicy)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete a NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the NetworkPolicy
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
   */
  def deleteExtensionsV1beta1NamespacedNetworkPolicy(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1DeleteOptions, pretty: Option[String] = None, gracePeriodSeconds: Option[Int] = None, orphanDependents: Option[Boolean] = None, propagationPolicy: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withQueryParam("gracePeriodSeconds", gracePeriodSeconds)
      .withQueryParam("orphanDependents", orphanDependents)
      .withQueryParam("propagationPolicy", propagationPolicy)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete a ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
   */
  def deleteExtensionsV1beta1NamespacedReplicaSet(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1DeleteOptions, pretty: Option[String] = None, gracePeriodSeconds: Option[Int] = None, orphanDependents: Option[Boolean] = None, propagationPolicy: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withQueryParam("gracePeriodSeconds", gracePeriodSeconds)
      .withQueryParam("orphanDependents", orphanDependents)
      .withQueryParam("propagationPolicy", propagationPolicy)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * delete a PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1Status (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the PodSecurityPolicy
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
   * @param orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
   * @param propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
   */
  def deleteExtensionsV1beta1PodSecurityPolicy(name: String, body: IoK8sApimachineryPkgApisMetaV1DeleteOptions, pretty: Option[String] = None, gracePeriodSeconds: Option[Int] = None, orphanDependents: Option[Boolean] = None, propagationPolicy: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1Status] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1Status](ApiMethods.DELETE, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withQueryParam("gracePeriodSeconds", gracePeriodSeconds)
      .withQueryParam("orphanDependents", orphanDependents)
      .withQueryParam("propagationPolicy", propagationPolicy)
      .withPathParam("name", name)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1Status](200)
      .withErrorResponse[Unit](401)
        /**
   * get available resources
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1APIResourceList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   */
  def getExtensionsV1beta1APIResources()(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1APIResourceList] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1APIResourceList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/", "application/json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1APIResourceList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSetList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1DaemonSetForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSetList] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSetList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/daemonsets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSetList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DeploymentList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1DeploymentForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DeploymentList] =
    ApiRequest[IoK8sApiExtensionsV1beta1DeploymentList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/deployments", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DeploymentList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1IngressList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1IngressForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1IngressList] =
    ApiRequest[IoK8sApiExtensionsV1beta1IngressList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/ingresses", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1IngressList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSetList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1NamespacedDaemonSet(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSetList] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSetList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSetList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DeploymentList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1NamespacedDeployment(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DeploymentList] =
    ApiRequest[IoK8sApiExtensionsV1beta1DeploymentList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DeploymentList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1IngressList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1NamespacedIngress(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1IngressList] =
    ApiRequest[IoK8sApiExtensionsV1beta1IngressList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1IngressList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1NetworkPolicyList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1NamespacedNetworkPolicy(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicyList] =
    ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicyList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1NetworkPolicyList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSetList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1NamespacedReplicaSet(namespace: String, pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSetList] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSetList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSetList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1NetworkPolicyList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1NetworkPolicyForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicyList] =
    ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicyList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/networkpolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1NetworkPolicyList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1PodSecurityPolicyList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1PodSecurityPolicy(pretty: Option[String] = None, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicyList] =
    ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicyList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicyList](200)
      .withErrorResponse[Unit](401)
        /**
   * list or watch objects of kind ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSetList (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def listExtensionsV1beta1ReplicaSetForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSetList] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSetList](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/replicasets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSetList](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update the specified DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedDaemonSet(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update status of the specified DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedDaemonSetStatus(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedDeployment(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update scale of the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedDeploymentScale(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update status of the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedDeploymentStatus(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update the specified Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedIngress(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update status of the specified Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedIngressStatus(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update the specified NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1NetworkPolicy (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the NetworkPolicy
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedNetworkPolicy(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedReplicaSet(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update scale of the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedReplicaSetScale(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update status of the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedReplicaSetStatus(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update scale of the specified ReplicationControllerDummy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1NamespacedReplicationControllerDummyScale(name: String, namespace: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[Unit](401)
        /**
   * partially update the specified PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the PodSecurityPolicy
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def patchExtensionsV1beta1PodSecurityPolicy(name: String, body: IoK8sApimachineryPkgApisMetaV1Patch, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy](ApiMethods.PATCH, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies/{name}", "application/json-patch+json")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](200)
      .withErrorResponse[Unit](401)
        /**
   * read the specified DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
   * @param export Should this value be exported.  Export strips fields that a user can not specify.
   */
  def readExtensionsV1beta1NamespacedDaemonSet(name: String, namespace: String, pretty: Option[String] = None, exact: Option[Boolean] = None, export: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("exact", exact)
      .withQueryParam("export", export)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[Unit](401)
        /**
   * read status of the specified DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedDaemonSetStatus(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[Unit](401)
        /**
   * read the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
   * @param export Should this value be exported.  Export strips fields that a user can not specify.
   */
  def readExtensionsV1beta1NamespacedDeployment(name: String, namespace: String, pretty: Option[String] = None, exact: Option[Boolean] = None, export: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("exact", exact)
      .withQueryParam("export", export)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[Unit](401)
        /**
   * read scale of the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedDeploymentScale(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[Unit](401)
        /**
   * read status of the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedDeploymentStatus(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[Unit](401)
        /**
   * read the specified Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
   * @param export Should this value be exported.  Export strips fields that a user can not specify.
   */
  def readExtensionsV1beta1NamespacedIngress(name: String, namespace: String, pretty: Option[String] = None, exact: Option[Boolean] = None, export: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("exact", exact)
      .withQueryParam("export", export)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[Unit](401)
        /**
   * read status of the specified Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedIngressStatus(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[Unit](401)
        /**
   * read the specified NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1NetworkPolicy (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the NetworkPolicy
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
   * @param export Should this value be exported.  Export strips fields that a user can not specify.
   */
  def readExtensionsV1beta1NamespacedNetworkPolicy(name: String, namespace: String, pretty: Option[String] = None, exact: Option[Boolean] = None, export: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("exact", exact)
      .withQueryParam("export", export)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](200)
      .withErrorResponse[Unit](401)
        /**
   * read the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
   * @param export Should this value be exported.  Export strips fields that a user can not specify.
   */
  def readExtensionsV1beta1NamespacedReplicaSet(name: String, namespace: String, pretty: Option[String] = None, exact: Option[Boolean] = None, export: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("exact", exact)
      .withQueryParam("export", export)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[Unit](401)
        /**
   * read scale of the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedReplicaSetScale(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[Unit](401)
        /**
   * read status of the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedReplicaSetStatus(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[Unit](401)
        /**
   * read scale of the specified ReplicationControllerDummy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def readExtensionsV1beta1NamespacedReplicationControllerDummyScale(name: String, namespace: String, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[Unit](401)
        /**
   * read the specified PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the PodSecurityPolicy
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param exact Should the export be exact.  Exact export maintains cluster-specific fields like &#39;Namespace&#39;.
   * @param export Should this value be exported.  Export strips fields that a user can not specify.
   */
  def readExtensionsV1beta1PodSecurityPolicy(name: String, pretty: Option[String] = None, exact: Option[Boolean] = None, export: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("pretty", pretty)
      .withQueryParam("exact", exact)
      .withQueryParam("export", export)
      .withPathParam("name", name)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](200)
      .withErrorResponse[Unit](401)
        /**
   * replace the specified DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1DaemonSet (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedDaemonSet(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1DaemonSet, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1DaemonSet](201)
      .withErrorResponse[Unit](401)
        /**
   * replace status of the specified DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1DaemonSet (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1DaemonSet (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedDaemonSetStatus(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1DaemonSet, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1DaemonSet](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1DaemonSet](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1DaemonSet](201)
      .withErrorResponse[Unit](401)
        /**
   * replace the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Deployment (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedDeployment(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Deployment, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Deployment](201)
      .withErrorResponse[Unit](401)
        /**
   * replace scale of the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Scale (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedDeploymentScale(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Scale, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Scale](201)
      .withErrorResponse[Unit](401)
        /**
   * replace status of the specified Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Deployment (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Deployment (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedDeploymentStatus(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Deployment, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Deployment] =
    ApiRequest[IoK8sApiExtensionsV1beta1Deployment](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Deployment](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Deployment](201)
      .withErrorResponse[Unit](401)
        /**
   * replace the specified Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Ingress (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedIngress(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Ingress, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Ingress](201)
      .withErrorResponse[Unit](401)
        /**
   * replace status of the specified Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Ingress (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Ingress (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedIngressStatus(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Ingress, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Ingress] =
    ApiRequest[IoK8sApiExtensionsV1beta1Ingress](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Ingress](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Ingress](201)
      .withErrorResponse[Unit](401)
        /**
   * replace the specified NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1NetworkPolicy (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1NetworkPolicy (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the NetworkPolicy
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedNetworkPolicy(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1NetworkPolicy, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1NetworkPolicy](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1NetworkPolicy](201)
      .withErrorResponse[Unit](401)
        /**
   * replace the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1ReplicaSet (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedReplicaSet(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1ReplicaSet, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1ReplicaSet](201)
      .withErrorResponse[Unit](401)
        /**
   * replace scale of the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Scale (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedReplicaSetScale(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Scale, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Scale](201)
      .withErrorResponse[Unit](401)
        /**
   * replace status of the specified ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1ReplicaSet (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1ReplicaSet (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedReplicaSetStatus(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1ReplicaSet, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet] =
    ApiRequest[IoK8sApiExtensionsV1beta1ReplicaSet](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1ReplicaSet](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1ReplicaSet](201)
      .withErrorResponse[Unit](401)
        /**
   * replace scale of the specified ReplicationControllerDummy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1Scale (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1Scale (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Scale
   * @param namespace object name and auth scope, such as for teams and projects
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1NamespacedReplicationControllerDummyScale(name: String, namespace: String, body: IoK8sApiExtensionsV1beta1Scale, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1Scale] =
    ApiRequest[IoK8sApiExtensionsV1beta1Scale](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1Scale](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1Scale](201)
      .withErrorResponse[Unit](401)
        /**
   * replace the specified PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (OK)
   *   code 201 : IoK8sApiExtensionsV1beta1PodSecurityPolicy (Created)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the PodSecurityPolicy
   * @param body 
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   */
  def replaceExtensionsV1beta1PodSecurityPolicy(name: String, body: IoK8sApiExtensionsV1beta1PodSecurityPolicy, pretty: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy] =
    ApiRequest[IoK8sApiExtensionsV1beta1PodSecurityPolicy](ApiMethods.PUT, "https://localhost", "/apis/extensions/v1beta1/podsecuritypolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withBody(body)
      .withQueryParam("pretty", pretty)
      .withPathParam("name", name)
      .withSuccessResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](200)
      .withErrorResponse[IoK8sApiExtensionsV1beta1PodSecurityPolicy](201)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1DaemonSetListForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/daemonsets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1DeploymentListForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/deployments", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1IngressListForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/ingresses", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch changes to an object of kind DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the DaemonSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedDaemonSet(name: String, namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of DaemonSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedDaemonSetList(namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch changes to an object of kind Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Deployment
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedDeployment(name: String, namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of Deployment
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedDeploymentList(namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch changes to an object of kind Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the Ingress
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedIngress(name: String, namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of Ingress
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedIngressList(namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch changes to an object of kind NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the NetworkPolicy
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedNetworkPolicy(name: String, namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedNetworkPolicyList(namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch changes to an object of kind ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the ReplicaSet
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedReplicaSet(name: String, namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("name", name)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param namespace object name and auth scope, such as for teams and projects
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NamespacedReplicaSetList(namespace: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("namespace", namespace)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of NetworkPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1NetworkPolicyListForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/networkpolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch changes to an object of kind PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param name name of the PodSecurityPolicy
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1PodSecurityPolicy(name: String, continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/podsecuritypolicies/{name}", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withPathParam("name", name)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of PodSecurityPolicy
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1PodSecurityPolicyList(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/podsecuritypolicies", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
        /**
   * watch individual changes to a list of ReplicaSet
   * 
   * Expected answers:
   *   code 200 : IoK8sApimachineryPkgApisMetaV1WatchEvent (OK)
   *   code 401 :  (Unauthorized)
   * 
   * Available security schemes:
   *   BearerToken (apiKey)
   * 
   * @param continue The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
   * @param fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
   * @param includeUninitialized If true, partially initialized resources are included in the response.
   * @param labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
   * @param limit limit is a maximum number of responses to return for a list call. If more items exist, the server will set the &#x60;continue&#x60; field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
   * @param pretty If &#39;true&#39;, then the output is pretty printed.
   * @param resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
   * @param timeoutSeconds Timeout for the list/watch call.
   * @param watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
   */
  def watchExtensionsV1beta1ReplicaSetListForAllNamespaces(continue: Option[String] = None, fieldSelector: Option[String] = None, includeUninitialized: Option[Boolean] = None, labelSelector: Option[String] = None, limit: Option[Int] = None, pretty: Option[String] = None, resourceVersion: Option[String] = None, timeoutSeconds: Option[Int] = None, watch: Option[Boolean] = None)(implicit apiKey: ApiKeyValue): ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent] =
    ApiRequest[IoK8sApimachineryPkgApisMetaV1WatchEvent](ApiMethods.GET, "https://localhost", "/apis/extensions/v1beta1/watch/replicasets", "*/*")
      .withApiKey(apiKey, "authorization", HEADER)
      .withQueryParam("continue", continue)
      .withQueryParam("fieldSelector", fieldSelector)
      .withQueryParam("includeUninitialized", includeUninitialized)
      .withQueryParam("labelSelector", labelSelector)
      .withQueryParam("limit", limit)
      .withQueryParam("pretty", pretty)
      .withQueryParam("resourceVersion", resourceVersion)
      .withQueryParam("timeoutSeconds", timeoutSeconds)
      .withQueryParam("watch", watch)
      .withSuccessResponse[IoK8sApimachineryPkgApisMetaV1WatchEvent](200)
      .withErrorResponse[Unit](401)
      

}

